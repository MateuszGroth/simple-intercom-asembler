#include <at89x52.h>
#include <absacc.h>
#include <math.h>
#define LCDWC XBYTE[0xff80] //LCD write control
#define LCDWD XBYTE[0xff81] //LCD write data
#define LCDRC XBYTE[0xff82] //LCD read control (status)
#define LCDRD XBYTE[0xff83] //LCD read data

#define CSKB0 XBYTE[0xff21] //stan kb1 (0-7)
#define CSKB1 XBYTE[0xff22] //stan kb2 (pozostale)

void wait(unsigned int d) {
	unsigned int i,j;
	for (j=0; j<d; j++)
    	for (i=0; i<144; i++);
}


void write_control(unsigned char a){	//zapis rozakazu, zapis danej
	while ( XBYTE[0xff82] & 0x80 ) wait(1);
	XBYTE[0xff80]=a;
}


void write_data(unsigned char a){
	while ( XBYTE[0xff82] & 0x80 ) wait(1);
	XBYTE[0xff81]=a;
}


void lcd_clr(void){
	write_control(0x01);
	wait(10);
}

//inicjalizacja wyswietlacza
void lcd_init (void) {
unsigned char i;
	static const unsigned char code init_tab[] ={0x33, 0x32, 0x38, 0x08, 0x0f, 0x06};
	for (i = 0; i < sizeof init_tab; ++i) {
        write_control(init_tab[i]);
        wait(1);
	}
	lcd_clr();
	write_control(0x80);            // wybierz adres DD RAM
	wait(1);
}

//program obslugi wswietlacza
void lcd(unsigned char c) {
    unsigned char x;
        switch(c){				//znakow
case'\n':						//od nowego wiersza
		x=XBYTE[0xFF82];
		if (x<=0x0f) write_control(0xc0)	;
		if((x>=0x41)&&(x<=0x50)){
		write_control(0x80);
		}
		break;
default:
        if(c>0x1f && c,0x80) write_data(c);
    	wait(1);
        break;
	}
wait(1);
XBYTE[0xFF82];
if(x==0x10)write_control(0xc0);			//rozkaz dana
if(x==0x50)write_control(0x80);			//
}




main(){

int licznik, i, m, ko, k;
unsigned char  wybor, kod[2], przycisk;
unsigned char popk[] = "Wejdz";
unsigned char zk[] = "Zly kod";
unsigned char ts[] = "Tryb serwisowy";
unsigned char wb[] = "1-dzwon\n2-wpisz kod";

unsigned char pKod[3] = {"111"};
unsigned char dKod[3] = {"222"};
unsigned char tKod[3] = {"333"};
unsigned char cKod[3] = {"444"};
unsigned char aKod[3] = {"000"};
licznik = 0;
lcd_init();

while(1){
    while(licznik<2){
        P1_5 = 1;
if(licznik==0){
        lcd_clr();

		}

		if(~XBYTE[0xF021]==0x01)
		{
			przycisk='0';
            licznik=3;
			break;
		}
		if(~XBYTE[0xF021]==0x02)
		{
			przycisk='1';
            licznik=3;
			break;
		}
		if(~XBYTE[0xF021]==0x04)
		{
			przycisk='2';
            licznik=3;
			break;
		}
			if(~XBYTE[0xF021]==0x08)
		{
			przycisk='3';
            licznik=3;
			break;
		}
			if(~XBYTE[0xF021]==0x10)
		{
			przycisk='4';
            licznik=3;
			break;
		}
			if(~XBYTE[0xF021]==0x20)
		{
			przycisk='5';
            licznik=3;
			break;
		}
			if(~XBYTE[0xF021]==0x40)
		{
			przycisk='6';
            licznik=3;
			break;
		}
			if(~XBYTE[0xF021]==0x80)
		{
			przycisk='7';
            licznik=3;
			break;
		}
			if(~XBYTE[0xF022]==0x01)
		{
			przycisk='8';
            licznik=3;
			break;
		}
			if(~XBYTE[0xF021]==0x02)
		{
			przycisk='9';
            licznik=3;
			break;
		}






    }

lcd(przycisk);
wait(400);


wait(500);

if(1){
          lcd_clr();
          for (i=0;wb[i];i++) lcd(wb[i]);
          m=0;
while(m<1){


wybor='0';
    if(~XBYTE[0xF021]==0x02){
wybor='1';
m++;
wait(200);
    }
    if(~XBYTE[0xF021]==0x04){
wybor='2';
m++;
wait(200);
    }
}
}

if(wybor=='1'){
      for(i=0;i<6;i++)  {
     lcd(przycisk);
     P1_5 = 0;
wait(200);
lcd_clr();
P1_5 = 1;
wait(200);
             }
             licznik=0;
}

if(wybor=='2'){
    lcd_clr();
    ko=0;
    while(ko<2){


for(i=0;i<2;i++){
if(~XBYTE[0xF021]==0x01)
		{
			kod[ko]='0';
            ko++;
            wait(200);
			break;
		}
		if(~XBYTE[0xF021]==0x02)
		{
			kod[ko]='1';
            ko++;
            wait(200);
			break;
		}
		if(~XBYTE[0xF021]==0x04)
		{
			kod[ko]='2';
            ko++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF021]==0x08)
		{
			kod[ko]='3';
            ko++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF021]==0x10)
		{
			kod[ko]='4';
            ko++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF021]==0x20)
		{
			kod[ko]='5';
            ko++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF021]==0x40)
		{
			kod[ko]='6';
            ko++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF021]==0x80)
		{
			kod[ko]='7';
            ko++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF022]==0x01)
		{
			kod[ko]='8';
            ko++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF022]==0x02)
		{
			kod[ko]='9';
            ko++;
            wait(200);
			break;
		}

}


}

lcd_clr();
  lcd(kod[ko-2]);
    lcd(kod[ko-1]);
     wait(400);
     lcd_clr();

if(przycisk==pKod[0]){
if(kod[0]==pKod[1] && kod[1]==pKod[2]){
        for (i=0;popk[i];i++) lcd(popk[i]);
        P1_5 = 0;
	 }
	 else{
	 	for (i=0;zk[i];i++) lcd(zk[i]);
		}
		}
		if(przycisk==dKod[0]){
if(kod[1]==dKod[1] && kod[1]==dKod[2]){
       for (i=0;popk[i];i++) lcd(popk[i]);
        P1_5 = 0;
	 }
	 else{
	 	for (i=0;zk[i];i++) lcd(zk[i]);
		}
		}
		if(przycisk==tKod[0]){
if(kod[0]==tKod[1] && kod[1]==tKod[2]){
       for (i=0;popk[i];i++) lcd(popk[i]);
        P1_5 = 0;
	 }
	 else{
	 		for (i=0;zk[i];i++) lcd(zk[i]);
		}
		}
		if(przycisk==cKod[0]){
if(kod[0]==cKod[1] && kod[1]==cKod[2]){
        for (i=0;popk[i];i++) lcd(popk[i]);
        P1_5 = 0;
	 }
	 else{
	 		for (i=0;zk[i];i++) lcd(zk[i]);
		}
		}


		if(przycisk==aKod[0]){
if(kod[0]==aKod[1] && kod[1]==aKod[2]){
         for (i=0;popk[i];i++) lcd(popk[i]);
        P1_5 = 0;
	 }
	 else if(kod[0]=='2' && kod[1]=='3'){
	 	for (i=0;ts[i];i++) lcd(ts[i]);
	 	wait(400);
	 	lcd_clr();
	 	k=0;
	 	while(k<2){

for(i=0;i<2;i++){
if(~XBYTE[0xF021]==0x01)
		{
			aKod[k+1]='0';
            k++;
            wait(200);
			break;
		}
		if(~XBYTE[0xF021]==0x02)
		{
			aKod[k+1]='1';
            k++;
            wait(200);
			break;
		}
		if(~XBYTE[0xF021]==0x04)
		{
			aKod[k+1]='2';
            k++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF021]==0x08)
		{
			aKod[k+1]='3';
            k++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF021]==0x10)
		{
			aKod[k+1]='4';
            k++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF021]==0x20)
		{
			aKod[k+1]='5';
            k++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF021]==0x40)
		{
			aKod[k+1]='6';
            k++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF021]==0x80)
		{
			aKod[k+1]='7';
            k++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF022]==0x01)
		{
			aKod[k+1]='8';
            k++;
            wait(200);
			break;
		}
			if(~XBYTE[0xF022]==0x02)
		{
			aKod[k+1]='9';
            k++;
            wait(200);
			break;
		}
}


}
	 	lcd(aKod[k-1]);
	 	lcd(aKod[k]);
	 	wait(500);
		}

		else{
         	for (i=0;zk[i];i++) lcd(zk[i]);
		}
}

}
wait(500);

licznik=0;
        }
}
